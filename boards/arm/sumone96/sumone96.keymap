#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        numlock_on: numlock_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bl BL_ON>,<&tog 1>,<&kp KP_NUMLOCK>;
        };
        numlock_off: numlock_off {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bl BL_OFF>,<&tog 1>,<&kp KP_NUMLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // Layer 0
            bindings = <
                &kp ESC             &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12             &kp F13         &kp F14     &kp F15         &kp F16             
                &kp GRAVE   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8      &kp N9      &kp N0      &kp MINUS   &kp EQUAL   &kp BSPC            &numlock_on     &kp PSCRN   &kp SLCK        &kp PAUSE_BREAK     
                &kp TAB     &kp Q   &kp W   &kp E   &kp R   &kp T   &kp Y   &kp U   &kp I       &kp O       &kp P       &kp LBKT    &kp RBKT    &kp BSLH            &kp INS         &kp HOME    &kp PG_UP       &kp KP_PLUS              
                &kp CAPS    &kp A   &kp S   &kp D   &kp F   &kp G   &kp H   &kp J   &kp K       &kp L       &kp SEMI    &kp APOS                &kp ENTER           &kp DEL         &kp END     &kp PG_DN            
                &kp LSHIFT  &kp Z   &kp X   &kp C   &kp V   &kp B   &kp N   &kp M   &kp COMMA   &kp PERIOD  &kp FSLH                            &kp RSHIFT          &kp C_AC_UNDO   &kp UP      &kp C_AC_REDO   &kp KP_ENTER              
                &kp LCTRL   &kp LWIN    &kp LALT            &kp SPACE                           &kp RALT    &mo 4       &kp K_CMENU             &kp RCTRL           &kp LEFT        &kp DOWN    &kp RIGHT           
            >;
        };

        numpad { // Layer 1
            bindings = <
                &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &kp C_PP        &kp C_MUTE      &kp C_VOL_UP    &kp C_VOL_DN
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &numlock_off    &kp KP_SLASH    &kp KP_ASTERISK &kp KP_MINUS
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &kp KP_N7       &kp KP_N8       &kp KP_N9       &kp KP_PLUS
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans      &kp KP_N4       &kp KP_N5       &kp KP_N6
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans      &kp KP_N1       &kp KP_N2       &kp KP_N3       &kp KP_ENTER
                &trans  &trans  &trans                  &trans                          &trans  &trans  &trans          &trans      &kp KP_N0       &kp KP_DOT      &kp COMMA
            >;
        };

        mouse { // Layer 2
            bindings = <
                &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MCLK
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp LCLK
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans      &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans  &trans  &trans  &mkp RCLK
                &trans  &trans  &trans                  &trans                          &trans  &trans  &trans          &trans      &trans  &trans  &trans
            >;
        };

        disable { // Layer 3
            bindings = <
                &none           &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none      &none  &none  &none  &none
                &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none      &none  &none  &none  &none
                &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none      &none  &none  &none  &none
                &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none           &none      &none  &none  &none
                &none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none                   &none      &none  &none  &none  &none
                &none   &none   &none                   &none                           &none   &trans  &none           &none      &none  &none  &none
            >;
        };

        function { // Layer 4
            bindings = <
                &studio_unlock          &trans  &kp C_BKLT_TOG  &kp C_MUTE  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &trans  &kp C_BRI_DN  &kp C_BRI_UP  &trans  &tog 2  &tog 3  &bt BT_PRV  &bt BT_NXT  &bootloader &sys_reset
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                              &bt BT_DISC &bt BT_CLR  &trans      &out OUT_TOG
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                                              &trans      &trans      &trans      &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans                                              &trans      &trans      &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans                                              &trans      &trans      &trans      &trans
                &trans  &trans  &trans                  &trans                          &trans  &trans  &trans          &trans                                              &trans      &trans      &trans
            >;
        };

        extra2 { // Layer 5
            status = "reserved";
        };

        extra3 { // Layer 6
            status = "reserved";
        };

        extra4 { // Layer 7
            status = "reserved";
        };
    }; 
};